{"ast":null,"code":"var _jsxFileName = \"/Users/user/Documents/Work_UA/LEI/PI/my-react-chat-app/src/components/ChatPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport '../ChatPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatPage = () => {\n  _s();\n  const [messages, setMessages] = useState([]); // State for storing chat messages\n  const [newMessage, setNewMessage] = useState(''); // State for the current input\n\n  // Function to handle sending a new message\n  const handleSendMessage = async () => {\n    if (newMessage.trim()) {\n      // Create a message object for the user's message\n      const userMessage = {\n        text: newMessage,\n        isUser: true // Indicates the message is from the user\n      };\n\n      // Add the user's message to the list of messages\n      setMessages(prevMessages => [...prevMessages, userMessage]);\n\n      // Clear the input field\n      setNewMessage('');\n\n      // Send the user's message to the API and handle the response\n      try {\n        const url = `http://localhost:8000/detibot/${encodeURIComponent(newMessage)}`;\n        const response = await axios.get(url);\n\n        // Handle the API response\n        if (response.data && response.data.reply) {\n          const apiResponse = {\n            text: response.data.reply,\n            isUser: false // Indicates the message is from the API\n          };\n          // Add the API response to the list of messages\n          setMessages(prevMessages => [...prevMessages, apiResponse]);\n        }\n      } catch (error) {\n        console.error('Error sending message to API:', error);\n        // Optionally handle the error (e.g., display an error message to the user)\n      }\n    }\n  };\n\n  // Function to handle the Enter key press in the input field\n  const handleKeyDown = event => {\n    if (event.key === 'Enter') {\n      event.preventDefault(); // Prevent form submission\n      handleSendMessage(); // Send the message\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"mb-4\",\n      children: \"Chat Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      style: {\n        maxHeight: '300px',\n        overflowY: 'auto',\n        borderRadius: '15px',\n        border: '1px solid #ccc',\n        padding: '10px'\n      },\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message-wrapper ${message.isUser ? 'user-message' : 'api-message'}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message-bubble ${message.isUser ? 'user-bubble' : 'api-bubble'}`,\n          children: message.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group mt-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newMessage,\n        onChange: e => setNewMessage(e.target.value),\n        onKeyDown: handleKeyDown,\n        placeholder: \"Type your message...\",\n        className: \"form-control\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendMessage,\n        className: \"btn btn-primary ml-2\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatPage, \"t/bJtz8T5owTIUv5OHFKDlj9m7s=\");\n_c = ChatPage;\nexport default ChatPage;\nvar _c;\n$RefreshReg$(_c, \"ChatPage\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","ChatPage","_s","messages","setMessages","newMessage","setNewMessage","handleSendMessage","trim","userMessage","text","isUser","prevMessages","url","encodeURIComponent","response","get","data","reply","apiResponse","error","console","handleKeyDown","event","key","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","maxHeight","overflowY","borderRadius","border","padding","map","message","index","type","value","onChange","e","target","onKeyDown","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/user/Documents/Work_UA/LEI/PI/my-react-chat-app/src/components/ChatPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport '../ChatPage.css';\n\nconst ChatPage = () => {\n    const [messages, setMessages] = useState([]); // State for storing chat messages\n    const [newMessage, setNewMessage] = useState(''); // State for the current input\n\n    // Function to handle sending a new message\n    const handleSendMessage = async () => {\n        if (newMessage.trim()) {\n            // Create a message object for the user's message\n            const userMessage = {\n                text: newMessage,\n                isUser: true, // Indicates the message is from the user\n            };\n\n            // Add the user's message to the list of messages\n            setMessages((prevMessages) => [...prevMessages, userMessage]);\n\n            // Clear the input field\n            setNewMessage('');\n\n            // Send the user's message to the API and handle the response\n            try {\n                const url = `http://localhost:8000/detibot/${encodeURIComponent(newMessage)}`;\n                const response = await axios.get(url);\n\n                // Handle the API response\n                if (response.data && response.data.reply) {\n                    const apiResponse = {\n                        text: response.data.reply,\n                        isUser: false, // Indicates the message is from the API\n                    };\n                    // Add the API response to the list of messages\n                    setMessages((prevMessages) => [...prevMessages, apiResponse]);\n                }\n            } catch (error) {\n                console.error('Error sending message to API:', error);\n                // Optionally handle the error (e.g., display an error message to the user)\n            }\n        }\n    };\n\n    // Function to handle the Enter key press in the input field\n    const handleKeyDown = (event) => {\n        if (event.key === 'Enter') {\n            event.preventDefault(); // Prevent form submission\n            handleSendMessage(); // Send the message\n        }\n    };\n\n    return (\n        <div className=\"container mt-4\">\n            <h1 className=\"mb-4\">Chat Page</h1>\n\n            {/* Display chat messages */}\n            <div className=\"chat-container\" style={{ maxHeight: '300px', overflowY: 'auto', borderRadius: '15px', border: '1px solid #ccc', padding: '10px' }}>\n                {messages.map((message, index) => (\n                    <div key={index} className={`message-wrapper ${message.isUser ? 'user-message' : 'api-message'}`}>\n                        <div className={`message-bubble ${message.isUser ? 'user-bubble' : 'api-bubble'}`}>\n                            {message.text}\n                        </div>\n                    </div>\n                ))}\n            </div>\n\n            {/* Chat input field */}\n            <div className=\"input-group mt-3\">\n                <input\n                    type=\"text\"\n                    value={newMessage}\n                    onChange={(e) => setNewMessage(e.target.value)}\n                    onKeyDown={handleKeyDown}\n                    placeholder=\"Type your message...\"\n                    className=\"form-control\"\n                />\n                <button\n                    onClick={handleSendMessage}\n                    className=\"btn btn-primary ml-2\"\n                >\n                    Send\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default ChatPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}